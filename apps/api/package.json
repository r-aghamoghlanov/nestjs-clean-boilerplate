{
  "name": "api",
  "version": "1.0.0",
  "description": "",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "npm run build && npx typeorm -d dist/infrastructure/database/typeorm/datasource/datasource.js",
    "db:setup": "dropdb clean-architecture-boilerplate; createdb clean-architecture-boilerplate",
    "db:migration:generate": "npm run typeorm -- migration:generate src/infrastructure/database/typeorm/migrations/$npm_config_name-migration",
    "db:migration:create": "npm run typeorm -- migration:create src/infrastructure/database/typeorm/migrations/$npm_config_name-migration",
    "db:migration:revert": "npm run typeorm -- migration:revert",
    "db:migration:run": "npm run typeorm -- migration:run"
  },
  "scriptDescriptions": {
    "build": "Build the project",
    "format": "Format the code with prettier",
    "start": "Start the project in production mode",
    "start:dev": "Start the project in development mode",
    "start:debug": "Start the project in debug mode",
    "lint": "Lint the code with eslint",
    "test": "Run tests",
    "test:watch": "Run tests in watch mode",
    "test:cov": "Run tests with coverage",
    "test:debug": "Run tests in debug mode",
    "test:e2e": "Run end-to-end tests",
    "db:setup": "Drops and creates development database",
    "db:migration:generate": "Generate a new migration based on the state of the models (e.g. npm run db:migration:generate --name=user)",
    "db:migration:create": "Create a new empty migration (e.g. npm run db:migration:create --name=user)",
    "db:migration:revert": "Revert the last migration",
    "db:migration:run": "Run all pending migrations"
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.7",
    "dotenv": "^17.2.1",
    "express-basic-auth": "^1.2.1",
    "helmet": "^8.1.0",
    "nestjs-zod": "^4.3.1",
    "pg": "^8.16.3",
    "pino": "^9.7.0",
    "pino-http": "^10.5.0",
    "redis": "^4.7.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.25",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/cookie-parser": "^1.4.9",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/morgan": "^1.9.10",
    "@types/node": "^22.10.7",
    "@types/redis": "^4.0.10",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "pino-pretty": "^13.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}